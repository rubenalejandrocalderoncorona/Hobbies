{"version":3,"file":"component---src-pages-works-tsx-939310563a019e9aa012.js","mappings":"2QAOMA,EAAgBC,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,wDAMbC,EAAeD,EAAAA,QAAAA,GAAAA,WAAH,8DAAGA,CAAH,oCACH,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,UAAUC,WAA1B,IACH,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,YAAYC,OAA5B,IAGhBC,GAAWR,EAAAA,EAAAA,SAAOS,EAAAA,MAAV,qEAAGT,CAAH,iUACH,SAAAE,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,KAAvB,IACM,SAAAT,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,MAAQ,IAA/B,IACZ,SAAAT,GAAK,OAAIA,EAAMC,MAAMC,UAAUQ,MAA1B,IACH,SAAAV,GAAK,OAAIA,EAAMC,MAAMG,YAAYO,IAA5B,IAaT,SAAAX,GAAK,OAAIA,EAAMC,MAAMO,OAAOI,OAAvB,IACM,SAAAZ,GAAK,OAAIA,EAAMC,MAAMO,OAAOC,KAAvB,IAuC7B,EA7BoC,SAAC,GAAD,IAAEI,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OAClC,gCACE,gBAAC,KAAD,KACE,gBAAC,KAAD,cACA,gBAAC,KAAD,mCAEF,gBAAC,KAAD,KACE,gBAACjB,EAAD,KACE,gBAACE,EAAD,qBACA,gBAACO,EAAD,CAAUS,GAAG,SAAb,aACA,gBAACT,EAAD,CAAUS,GAAG,SAAb,aAEF,gBAAC,KAAD,KACE,gBAACC,EAAA,EAAD,CAAsBC,QAASJ,MAGnC,gBAAC,KAAD,KACE,gBAAChB,EAAD,KACE,gBAACE,EAAD,wBACA,gBAACO,EAAD,CAAUS,GAAG,aAAb,gBACA,gBAACT,EAAD,CAAUS,GAAG,SAAb,aAEF,gBAAC,KAAD,KACE,gBAACC,EAAA,EAAD,CAAsBC,QAASH,MAvBH,EC5CpC,ECGiC,WAC/B,IAAMI,GAAOC,EAAAA,EAAAA,gBAAe,cAkCtBN,EAAQK,EAAKE,kBAAkBC,MAClCC,QAAO,SAACC,GAAD,MAA+C,SAA/BA,EAAKC,KAAKC,YAAYC,IAAtC,IACPC,MAAM,EAAG,GAENb,EAAWI,EAAKE,kBAAkBC,MACrCC,QAAO,SAACC,GAAD,MAA+C,YAA/BA,EAAKC,KAAKC,YAAYC,IAAtC,IACPC,MAAM,EAAG,GAEZ,OAAO,gBAAC,EAAD,CAAOd,MAAOA,EAAOC,SAAUA,GACvC,ECAD,EApC4C,SAAC,GAAY,IACjDc,EADgD,EAAVV,KACrBW,KAAKC,aAAaC,MAEzC,OACE,gBAACC,EAAA,EAAD,CAAQD,MAAOH,GACb,gBAACK,EAAA,EAAD,CACEF,MAAM,OACNG,SAAU,CAAC,OAAD,0DASZ,gBAACC,EAAA,EAAD,CACEC,eAAgB,KAChBC,iBAAkB,GAClBC,mBAAmB,IAErB,gBAACC,EAAA,EAAD,KACE,gBAAC,EAAD,OAIP,C","sources":["webpack://gatsby-personal-site/./src/components/Works/Works.tsx","webpack://gatsby-personal-site/./src/components/Works/index.ts","webpack://gatsby-personal-site/./src/components/Works/WorksContainer.tsx","webpack://gatsby-personal-site/./src/pages/works.tsx"],"sourcesContent":["import React from 'react'\r\nimport {Description, Header, Section, SectionBody, Title} from '../../styles'\r\nimport {ContentListContainer} from '../ContentList'\r\nimport {Work} from '../../types'\r\nimport styled from 'styled-components'\r\nimport {Link} from 'gatsby'\r\n\r\nconst SectionHeader = styled.div`\r\n  padding-left: 1rem;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: ${props => props.theme.fontSizes.mediumLarge};\r\n  font-weight: ${props => props.theme.fontWeights.regular};\r\n`\r\n\r\nconst MoreLink = styled(Link)`\r\n  color: ${props => props.theme.colors.light};\r\n  background-color: ${props => props.theme.colors.light + '40'};\r\n  font-size: ${props => props.theme.fontSizes.normal};\r\n  font-weight: ${props => props.theme.fontWeights.bold};\r\n  border-radius: 5px;\r\n  box-sizing: border-box;\r\n  text-decoration: none;\r\n  display: block;\r\n  padding: 0.4rem 0.6rem;\r\n  border-bottom: 0;\r\n  white-space: nowrap;\r\n  line-height: 1;\r\n  margin: 0.2rem 0 0.2rem 1rem;\r\n  transition: 0.4s ease;\r\n\r\n  &:hover {\r\n    color: ${props => props.theme.colors.darkest};\r\n    background-color: ${props => props.theme.colors.light};\r\n    border-bottom: none;\r\n  }\r\n`\r\n\r\ninterface WorksProps {\r\n  posts: Work[]\r\n  projects: Work[]\r\n}\r\n\r\nconst Works: React.FC<WorksProps> = ({posts, projects}) => (\r\n  <>\r\n    <Header>\r\n      <Title>Works</Title>\r\n      <Description>What I do and write about</Description>\r\n    </Header>\r\n    <Section>\r\n      <SectionHeader>\r\n        <SectionTitle>Latest posts</SectionTitle>\r\n        <MoreLink to=\"/blog\">All posts</MoreLink>\r\n        <MoreLink to=\"/tags\">All tags</MoreLink>\r\n      </SectionHeader>\r\n      <SectionBody>\r\n        <ContentListContainer content={posts} />\r\n      </SectionBody>\r\n    </Section>\r\n    <Section>\r\n      <SectionHeader>\r\n        <SectionTitle>Latest projects</SectionTitle>\r\n        <MoreLink to=\"/projects\">All projects</MoreLink>\r\n        <MoreLink to=\"/tags\">All tags</MoreLink>\r\n      </SectionHeader>\r\n      <SectionBody>\r\n        <ContentListContainer content={projects} />\r\n      </SectionBody>\r\n    </Section>\r\n  </>\r\n)\r\n\r\nexport default Works\r\n","import WorksContainer from './WorksContainer'\r\n\r\nexport default WorksContainer\r\n","import React from 'react'\r\nimport Works from './Works'\r\nimport {Work} from '../../types'\r\nimport {graphql, useStaticQuery} from 'gatsby'\r\n\r\nconst WorksContainer: React.FC = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query WorksQuery {\r\n      allMarkdownRemark(\r\n        filter: {frontmatter: {published: {ne: false}}}\r\n        sort: {fields: [frontmatter___date], order: DESC}\r\n      ) {\r\n        edges {\r\n          node {\r\n            id\r\n            excerpt\r\n            fields {\r\n              slug\r\n            }\r\n            frontmatter {\r\n              date(formatString: \"MMM DD, YYYY\")\r\n              title\r\n              description\r\n              tags\r\n              type\r\n              url\r\n              featuredImage {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 800) {\r\n                    ...GatsbyImageSharpFluid\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const posts = data.allMarkdownRemark.edges\r\n    .filter((work: Work) => work.node.frontmatter.type === 'post')\r\n    .slice(0, 3)\r\n\r\n  const projects = data.allMarkdownRemark.edges\r\n    .filter((work: Work) => work.node.frontmatter.type === 'project')\r\n    .slice(0, 3)\r\n\r\n  return <Works posts={posts} projects={projects} />\r\n}\r\n\r\nexport default WorksContainer\r\n","import React from 'react'\r\nimport {graphql} from 'gatsby'\r\nimport Head from '../components/Head'\r\nimport Layout from '../components/Layout'\r\nimport Stars from '../components/Stars'\r\nimport Content from '../components/Content'\r\nimport Works from '../components/Works'\r\nimport {TitlePageQueryData} from '../types'\r\n\r\ninterface WorksPageProps {\r\n  readonly data: TitlePageQueryData\r\n}\r\n\r\nconst WorksPage: React.FC<WorksPageProps> = ({data}) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n\r\n  return (\r\n    <Layout title={siteTitle}>\r\n      <Head\r\n        title=\"Blog\"\r\n        keywords={[\r\n          `blog`,\r\n          `gatsby`,\r\n          `typescript`,\r\n          `javascript`,\r\n          `portfolio`,\r\n          `react`\r\n        ]}\r\n      />\r\n      <Stars\r\n        normalVelocity={0.0001}\r\n        containerOpacity={0.3}\r\n        addEventListeners={false}\r\n      />\r\n      <Content>\r\n        <Works />\r\n      </Content>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      ...SiteTitle\r\n    }\r\n  }\r\n`\r\n\r\nexport default WorksPage\r\n"],"names":["SectionHeader","styled","SectionTitle","props","theme","fontSizes","mediumLarge","fontWeights","regular","MoreLink","Link","colors","light","normal","bold","darkest","posts","projects","to","ContentList","content","data","useStaticQuery","allMarkdownRemark","edges","filter","work","node","frontmatter","type","slice","siteTitle","site","siteMetadata","title","Layout","Head","keywords","Stars","normalVelocity","containerOpacity","addEventListeners","Content"],"sourceRoot":""}